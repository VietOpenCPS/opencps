/**
 * OpenCPS is the open source Core Public Services software
 * Copyright (C) 2016-present OpenCPS community
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>
 */

package org.opencps.statisticsmgt.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.opencps.statisticsmgt.model.DossiersStatistics;
import org.opencps.statisticsmgt.model.DossiersStatisticsModel;
import org.opencps.statisticsmgt.model.DossiersStatisticsSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the DossiersStatistics service. Represents a row in the &quot;opencps_dossierstatistics&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.opencps.statisticsmgt.model.DossiersStatisticsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DossiersStatisticsImpl}.
 * </p>
 *
 * @author trungnt
 * @see DossiersStatisticsImpl
 * @see org.opencps.statisticsmgt.model.DossiersStatistics
 * @see org.opencps.statisticsmgt.model.DossiersStatisticsModel
 * @generated
 */
@JSON(strict = true)
public class DossiersStatisticsModelImpl extends BaseModelImpl<DossiersStatistics>
	implements DossiersStatisticsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a dossiers statistics model instance should use the {@link org.opencps.statisticsmgt.model.DossiersStatistics} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_dossierstatistics";
	public static final Object[][] TABLE_COLUMNS = {
			{ "dossierStatisticId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "remainingNumber", Types.INTEGER },
			{ "receivedNumber", Types.INTEGER },
			{ "ontimeNumber", Types.INTEGER },
			{ "overtimeNumber", Types.INTEGER },
			{ "processingNumber", Types.INTEGER },
			{ "delayingNumber", Types.INTEGER },
			{ "month", Types.INTEGER },
			{ "year", Types.INTEGER },
			{ "govAgencyCode", Types.VARCHAR },
			{ "domainCode", Types.VARCHAR },
			{ "administrationLevel", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table opencps_dossierstatistics (dossierStatisticId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,remainingNumber INTEGER,receivedNumber INTEGER,ontimeNumber INTEGER,overtimeNumber INTEGER,processingNumber INTEGER,delayingNumber INTEGER,month INTEGER,year INTEGER,govAgencyCode VARCHAR(75) null,domainCode VARCHAR(75) null,administrationLevel INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_dossierstatistics";
	public static final String ORDER_BY_JPQL = " ORDER BY dossiersStatistics.dossierStatisticId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_dossierstatistics.dossierStatisticId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.statisticsmgt.model.DossiersStatistics"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.statisticsmgt.model.DossiersStatistics"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.statisticsmgt.model.DossiersStatistics"),
			true);
	public static long ADMINISTRATIONLEVEL_COLUMN_BITMASK = 1L;
	public static long DOMAINCODE_COLUMN_BITMASK = 2L;
	public static long GOVAGENCYCODE_COLUMN_BITMASK = 4L;
	public static long GROUPID_COLUMN_BITMASK = 8L;
	public static long MONTH_COLUMN_BITMASK = 16L;
	public static long YEAR_COLUMN_BITMASK = 32L;
	public static long DOSSIERSTATISTICID_COLUMN_BITMASK = 64L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static DossiersStatistics toModel(DossiersStatisticsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		DossiersStatistics model = new DossiersStatisticsImpl();

		model.setDossierStatisticId(soapModel.getDossierStatisticId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setGroupId(soapModel.getGroupId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setRemainingNumber(soapModel.getRemainingNumber());
		model.setReceivedNumber(soapModel.getReceivedNumber());
		model.setOntimeNumber(soapModel.getOntimeNumber());
		model.setOvertimeNumber(soapModel.getOvertimeNumber());
		model.setProcessingNumber(soapModel.getProcessingNumber());
		model.setDelayingNumber(soapModel.getDelayingNumber());
		model.setMonth(soapModel.getMonth());
		model.setYear(soapModel.getYear());
		model.setGovAgencyCode(soapModel.getGovAgencyCode());
		model.setDomainCode(soapModel.getDomainCode());
		model.setAdministrationLevel(soapModel.getAdministrationLevel());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<DossiersStatistics> toModels(
		DossiersStatisticsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<DossiersStatistics> models = new ArrayList<DossiersStatistics>(soapModels.length);

		for (DossiersStatisticsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.opencps.statisticsmgt.model.DossiersStatistics"));

	public DossiersStatisticsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _dossierStatisticId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDossierStatisticId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _dossierStatisticId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return DossiersStatistics.class;
	}

	@Override
	public String getModelClassName() {
		return DossiersStatistics.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("dossierStatisticId", getDossierStatisticId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("remainingNumber", getRemainingNumber());
		attributes.put("receivedNumber", getReceivedNumber());
		attributes.put("ontimeNumber", getOntimeNumber());
		attributes.put("overtimeNumber", getOvertimeNumber());
		attributes.put("processingNumber", getProcessingNumber());
		attributes.put("delayingNumber", getDelayingNumber());
		attributes.put("month", getMonth());
		attributes.put("year", getYear());
		attributes.put("govAgencyCode", getGovAgencyCode());
		attributes.put("domainCode", getDomainCode());
		attributes.put("administrationLevel", getAdministrationLevel());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long dossierStatisticId = (Long)attributes.get("dossierStatisticId");

		if (dossierStatisticId != null) {
			setDossierStatisticId(dossierStatisticId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer remainingNumber = (Integer)attributes.get("remainingNumber");

		if (remainingNumber != null) {
			setRemainingNumber(remainingNumber);
		}

		Integer receivedNumber = (Integer)attributes.get("receivedNumber");

		if (receivedNumber != null) {
			setReceivedNumber(receivedNumber);
		}

		Integer ontimeNumber = (Integer)attributes.get("ontimeNumber");

		if (ontimeNumber != null) {
			setOntimeNumber(ontimeNumber);
		}

		Integer overtimeNumber = (Integer)attributes.get("overtimeNumber");

		if (overtimeNumber != null) {
			setOvertimeNumber(overtimeNumber);
		}

		Integer processingNumber = (Integer)attributes.get("processingNumber");

		if (processingNumber != null) {
			setProcessingNumber(processingNumber);
		}

		Integer delayingNumber = (Integer)attributes.get("delayingNumber");

		if (delayingNumber != null) {
			setDelayingNumber(delayingNumber);
		}

		Integer month = (Integer)attributes.get("month");

		if (month != null) {
			setMonth(month);
		}

		Integer year = (Integer)attributes.get("year");

		if (year != null) {
			setYear(year);
		}

		String govAgencyCode = (String)attributes.get("govAgencyCode");

		if (govAgencyCode != null) {
			setGovAgencyCode(govAgencyCode);
		}

		String domainCode = (String)attributes.get("domainCode");

		if (domainCode != null) {
			setDomainCode(domainCode);
		}

		Integer administrationLevel = (Integer)attributes.get(
				"administrationLevel");

		if (administrationLevel != null) {
			setAdministrationLevel(administrationLevel);
		}
	}

	@JSON
	@Override
	public long getDossierStatisticId() {
		return _dossierStatisticId;
	}

	@Override
	public void setDossierStatisticId(long dossierStatisticId) {
		_dossierStatisticId = dossierStatisticId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public int getRemainingNumber() {
		return _remainingNumber;
	}

	@Override
	public void setRemainingNumber(int remainingNumber) {
		_remainingNumber = remainingNumber;
	}

	@JSON
	@Override
	public int getReceivedNumber() {
		return _receivedNumber;
	}

	@Override
	public void setReceivedNumber(int receivedNumber) {
		_receivedNumber = receivedNumber;
	}

	@JSON
	@Override
	public int getOntimeNumber() {
		return _ontimeNumber;
	}

	@Override
	public void setOntimeNumber(int ontimeNumber) {
		_ontimeNumber = ontimeNumber;
	}

	@JSON
	@Override
	public int getOvertimeNumber() {
		return _overtimeNumber;
	}

	@Override
	public void setOvertimeNumber(int overtimeNumber) {
		_overtimeNumber = overtimeNumber;
	}

	@JSON
	@Override
	public int getProcessingNumber() {
		return _processingNumber;
	}

	@Override
	public void setProcessingNumber(int processingNumber) {
		_processingNumber = processingNumber;
	}

	@JSON
	@Override
	public int getDelayingNumber() {
		return _delayingNumber;
	}

	@Override
	public void setDelayingNumber(int delayingNumber) {
		_delayingNumber = delayingNumber;
	}

	@JSON
	@Override
	public int getMonth() {
		return _month;
	}

	@Override
	public void setMonth(int month) {
		_columnBitmask |= MONTH_COLUMN_BITMASK;

		if (!_setOriginalMonth) {
			_setOriginalMonth = true;

			_originalMonth = _month;
		}

		_month = month;
	}

	public int getOriginalMonth() {
		return _originalMonth;
	}

	@JSON
	@Override
	public int getYear() {
		return _year;
	}

	@Override
	public void setYear(int year) {
		_columnBitmask |= YEAR_COLUMN_BITMASK;

		if (!_setOriginalYear) {
			_setOriginalYear = true;

			_originalYear = _year;
		}

		_year = year;
	}

	public int getOriginalYear() {
		return _originalYear;
	}

	@JSON
	@Override
	public String getGovAgencyCode() {
		if (_govAgencyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _govAgencyCode;
		}
	}

	@Override
	public void setGovAgencyCode(String govAgencyCode) {
		_columnBitmask |= GOVAGENCYCODE_COLUMN_BITMASK;

		if (_originalGovAgencyCode == null) {
			_originalGovAgencyCode = _govAgencyCode;
		}

		_govAgencyCode = govAgencyCode;
	}

	public String getOriginalGovAgencyCode() {
		return GetterUtil.getString(_originalGovAgencyCode);
	}

	@JSON
	@Override
	public String getDomainCode() {
		if (_domainCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _domainCode;
		}
	}

	@Override
	public void setDomainCode(String domainCode) {
		_columnBitmask |= DOMAINCODE_COLUMN_BITMASK;

		if (_originalDomainCode == null) {
			_originalDomainCode = _domainCode;
		}

		_domainCode = domainCode;
	}

	public String getOriginalDomainCode() {
		return GetterUtil.getString(_originalDomainCode);
	}

	@JSON
	@Override
	public int getAdministrationLevel() {
		return _administrationLevel;
	}

	@Override
	public void setAdministrationLevel(int administrationLevel) {
		_columnBitmask |= ADMINISTRATIONLEVEL_COLUMN_BITMASK;

		if (!_setOriginalAdministrationLevel) {
			_setOriginalAdministrationLevel = true;

			_originalAdministrationLevel = _administrationLevel;
		}

		_administrationLevel = administrationLevel;
	}

	public int getOriginalAdministrationLevel() {
		return _originalAdministrationLevel;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			DossiersStatistics.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public DossiersStatistics toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (DossiersStatistics)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DossiersStatisticsImpl dossiersStatisticsImpl = new DossiersStatisticsImpl();

		dossiersStatisticsImpl.setDossierStatisticId(getDossierStatisticId());
		dossiersStatisticsImpl.setCompanyId(getCompanyId());
		dossiersStatisticsImpl.setGroupId(getGroupId());
		dossiersStatisticsImpl.setUserId(getUserId());
		dossiersStatisticsImpl.setCreateDate(getCreateDate());
		dossiersStatisticsImpl.setModifiedDate(getModifiedDate());
		dossiersStatisticsImpl.setRemainingNumber(getRemainingNumber());
		dossiersStatisticsImpl.setReceivedNumber(getReceivedNumber());
		dossiersStatisticsImpl.setOntimeNumber(getOntimeNumber());
		dossiersStatisticsImpl.setOvertimeNumber(getOvertimeNumber());
		dossiersStatisticsImpl.setProcessingNumber(getProcessingNumber());
		dossiersStatisticsImpl.setDelayingNumber(getDelayingNumber());
		dossiersStatisticsImpl.setMonth(getMonth());
		dossiersStatisticsImpl.setYear(getYear());
		dossiersStatisticsImpl.setGovAgencyCode(getGovAgencyCode());
		dossiersStatisticsImpl.setDomainCode(getDomainCode());
		dossiersStatisticsImpl.setAdministrationLevel(getAdministrationLevel());

		dossiersStatisticsImpl.resetOriginalValues();

		return dossiersStatisticsImpl;
	}

	@Override
	public int compareTo(DossiersStatistics dossiersStatistics) {
		long primaryKey = dossiersStatistics.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof DossiersStatistics)) {
			return false;
		}

		DossiersStatistics dossiersStatistics = (DossiersStatistics)obj;

		long primaryKey = dossiersStatistics.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DossiersStatisticsModelImpl dossiersStatisticsModelImpl = this;

		dossiersStatisticsModelImpl._originalGroupId = dossiersStatisticsModelImpl._groupId;

		dossiersStatisticsModelImpl._setOriginalGroupId = false;

		dossiersStatisticsModelImpl._originalMonth = dossiersStatisticsModelImpl._month;

		dossiersStatisticsModelImpl._setOriginalMonth = false;

		dossiersStatisticsModelImpl._originalYear = dossiersStatisticsModelImpl._year;

		dossiersStatisticsModelImpl._setOriginalYear = false;

		dossiersStatisticsModelImpl._originalGovAgencyCode = dossiersStatisticsModelImpl._govAgencyCode;

		dossiersStatisticsModelImpl._originalDomainCode = dossiersStatisticsModelImpl._domainCode;

		dossiersStatisticsModelImpl._originalAdministrationLevel = dossiersStatisticsModelImpl._administrationLevel;

		dossiersStatisticsModelImpl._setOriginalAdministrationLevel = false;

		dossiersStatisticsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<DossiersStatistics> toCacheModel() {
		DossiersStatisticsCacheModel dossiersStatisticsCacheModel = new DossiersStatisticsCacheModel();

		dossiersStatisticsCacheModel.dossierStatisticId = getDossierStatisticId();

		dossiersStatisticsCacheModel.companyId = getCompanyId();

		dossiersStatisticsCacheModel.groupId = getGroupId();

		dossiersStatisticsCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			dossiersStatisticsCacheModel.createDate = createDate.getTime();
		}
		else {
			dossiersStatisticsCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			dossiersStatisticsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			dossiersStatisticsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		dossiersStatisticsCacheModel.remainingNumber = getRemainingNumber();

		dossiersStatisticsCacheModel.receivedNumber = getReceivedNumber();

		dossiersStatisticsCacheModel.ontimeNumber = getOntimeNumber();

		dossiersStatisticsCacheModel.overtimeNumber = getOvertimeNumber();

		dossiersStatisticsCacheModel.processingNumber = getProcessingNumber();

		dossiersStatisticsCacheModel.delayingNumber = getDelayingNumber();

		dossiersStatisticsCacheModel.month = getMonth();

		dossiersStatisticsCacheModel.year = getYear();

		dossiersStatisticsCacheModel.govAgencyCode = getGovAgencyCode();

		String govAgencyCode = dossiersStatisticsCacheModel.govAgencyCode;

		if ((govAgencyCode != null) && (govAgencyCode.length() == 0)) {
			dossiersStatisticsCacheModel.govAgencyCode = null;
		}

		dossiersStatisticsCacheModel.domainCode = getDomainCode();

		String domainCode = dossiersStatisticsCacheModel.domainCode;

		if ((domainCode != null) && (domainCode.length() == 0)) {
			dossiersStatisticsCacheModel.domainCode = null;
		}

		dossiersStatisticsCacheModel.administrationLevel = getAdministrationLevel();

		return dossiersStatisticsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(35);

		sb.append("{dossierStatisticId=");
		sb.append(getDossierStatisticId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", remainingNumber=");
		sb.append(getRemainingNumber());
		sb.append(", receivedNumber=");
		sb.append(getReceivedNumber());
		sb.append(", ontimeNumber=");
		sb.append(getOntimeNumber());
		sb.append(", overtimeNumber=");
		sb.append(getOvertimeNumber());
		sb.append(", processingNumber=");
		sb.append(getProcessingNumber());
		sb.append(", delayingNumber=");
		sb.append(getDelayingNumber());
		sb.append(", month=");
		sb.append(getMonth());
		sb.append(", year=");
		sb.append(getYear());
		sb.append(", govAgencyCode=");
		sb.append(getGovAgencyCode());
		sb.append(", domainCode=");
		sb.append(getDomainCode());
		sb.append(", administrationLevel=");
		sb.append(getAdministrationLevel());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(55);

		sb.append("<model><model-name>");
		sb.append("org.opencps.statisticsmgt.model.DossiersStatistics");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>dossierStatisticId</column-name><column-value><![CDATA[");
		sb.append(getDossierStatisticId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>remainingNumber</column-name><column-value><![CDATA[");
		sb.append(getRemainingNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>receivedNumber</column-name><column-value><![CDATA[");
		sb.append(getReceivedNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ontimeNumber</column-name><column-value><![CDATA[");
		sb.append(getOntimeNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>overtimeNumber</column-name><column-value><![CDATA[");
		sb.append(getOvertimeNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processingNumber</column-name><column-value><![CDATA[");
		sb.append(getProcessingNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>delayingNumber</column-name><column-value><![CDATA[");
		sb.append(getDelayingNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>month</column-name><column-value><![CDATA[");
		sb.append(getMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>year</column-name><column-value><![CDATA[");
		sb.append(getYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>govAgencyCode</column-name><column-value><![CDATA[");
		sb.append(getGovAgencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>domainCode</column-name><column-value><![CDATA[");
		sb.append(getDomainCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>administrationLevel</column-name><column-value><![CDATA[");
		sb.append(getAdministrationLevel());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = DossiersStatistics.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			DossiersStatistics.class
		};
	private long _dossierStatisticId;
	private long _companyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private int _remainingNumber;
	private int _receivedNumber;
	private int _ontimeNumber;
	private int _overtimeNumber;
	private int _processingNumber;
	private int _delayingNumber;
	private int _month;
	private int _originalMonth;
	private boolean _setOriginalMonth;
	private int _year;
	private int _originalYear;
	private boolean _setOriginalYear;
	private String _govAgencyCode;
	private String _originalGovAgencyCode;
	private String _domainCode;
	private String _originalDomainCode;
	private int _administrationLevel;
	private int _originalAdministrationLevel;
	private boolean _setOriginalAdministrationLevel;
	private long _columnBitmask;
	private DossiersStatistics _escapedModel;
}